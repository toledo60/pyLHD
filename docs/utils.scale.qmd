# utils.scale { #pyLHD.utils.scale }

`utils.scale(arr, uniformize=False)`

Scales design to be within [0,1]

## Parameters

| Name         | Type          | Description                                                                                                                                                                                | Default    |
|--------------|---------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `arr`        | numpy.ndarray | A design matrix                                                                                                                                                                            | _required_ |
| `uniformize` | bool          | If True, Rosenblatt transformation is applied  (uniformize by applying the empirical cumulative distribution).  If False (default), scaling is done by using the minimum and maximum value | `False`    |

## Returns

| Type          | Description       |
|---------------|-------------------|
| npt.ArrayLike | The scaled design |

## Examples



```{python}
import pyLHD
random_lhd = pyLHD.random_lhd(n_rows=5,n_columns=3)
pyLHD.scale(random_lhd)
```