# base.GoodLatticePoint { #pyLHD.base.GoodLatticePoint }

`base.GoodLatticePoint(N)`

Good Lattice Point (GLP) Design 

## Parameters

| Name   | Type   | Description                              | Default    |
|--------|--------|------------------------------------------|------------|
| `N`    | int    | An integer specifying the number of rows | _required_ |

## Returns

| Type          | Description                                                                                                                 |
|---------------|-----------------------------------------------------------------------------------------------------------------------------|
| npt.ArrayLike | A (N x euler_phi(N)) GLP design, where euler_phi(N) is the number of poositive integers that are less than and coprime to N |

## Examples



```{python}
import pyLHD
N = 5
pyLHD.totatives(N)
```
```{python}
pyLHD.GoodLatticePoint(N)
```
```{python}
N = 11
pyLHD.GoodLatticePoint(N)
```