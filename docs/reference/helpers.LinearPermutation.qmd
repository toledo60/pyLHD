# helpers.LinearPermutation { #pyLHD.helpers.LinearPermutation }

`helpers.LinearPermutation(arr, b, modulus=None)`

Apply a linear permutation to a Good lattice point (GLP) design

## Parameters

| Name      | Type               | Description                                                                                                               | Default    |
|-----------|--------------------|---------------------------------------------------------------------------------------------------------------------------|------------|
| `arr`     | npt.ArrayLike      | A numpy ndarray                                                                                                           | _required_ |
| `b`       | Union\[int, list\] | Value by which each element in the array is to be linearly level permuted. Can either be an integer or a list of integers | _required_ |
| `modulus` | int                | Modulus used for the permutation. Defaults to None. If None, the number of rows is used as the modulus.                   | `None`     |

## Returns

| Type          | Description                                                                          |
|---------------|--------------------------------------------------------------------------------------|
| npt.ArrayLike | npt.ArrayLike: A new array where each element is the result of `(arr + b) % modulus` |