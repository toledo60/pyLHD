# helpers.column_combinations { #pyLHD.helpers.column_combinations }

`helpers.column_combinations(arr, k)`

Generates all unique combinations of columns from the given array, selecting 'k' columns at a time.

## Parameters

| Name   | Type          | Description                                                                                                                                | Default    |
|--------|---------------|--------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `arr`  | npt.ArrayLike | A numpy ndarray                                                                                                                            | _required_ |
| `k`    | int           | The number of columns to include in each combination. Must be a positive integer and less than or equal to the number of columns in 'arr'. | _required_ |

## Returns

| Type                  | Description                                                                                                                                                                        |
|-----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| List\[npt.ArrayLike\] | List[npt.ArrayLike]: A list of arrays, each being a combination of 'k' columns from the original array. The combinations are returned as slices of the original array, not copies. |

## Examples




```{python}
import pyLHD
random_ls = pyLHD.LatinSquare(size = (4,4),seed = 1)
random_ls
```
Obtain all 2 column combinations of `random_ls`
```{python}
pyLHD.column_combinations(random_ls, k = 2)
```