# helpers.lapply { #pyLHD.helpers.lapply }

`helpers.lapply(lst, func, **kwargs)`

Apply a function to each item in a list

## Parameters

| Name     | Type                               | Description                                                                     | Default    |
|----------|------------------------------------|---------------------------------------------------------------------------------|------------|
| `lst`    | typing.List\[typing.Any\]          | List of elements to which the function will be applied                          | _required_ |
| `func`   | typing.Callable\[..., typing.Any\] | The function to apply. It can be a built-in function or a user-defined function | _required_ |
| `kwargs` | dict\[str, typing.Any\]            | Additional keyword arguments to pass to the function                            | `{}`       |

## Returns

| Type                      | Description                                                                        |
|---------------------------|------------------------------------------------------------------------------------|
| typing.List\[typing.Any\] | List[Any]: A list containing the results of applying `func` to each item in `lst`. |

Examples:

```{python}
import pyLHD
l = [[1,2],[3,5], [3,1]]
pyLHD.lapply(l, func = min)
```