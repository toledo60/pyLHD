# helpers.permute_columns { #pyLHD.helpers.permute_columns }

`helpers.permute_columns(arr, columns=None, seed=None)`

Randomly permute columns in a numpy ndarray

## Parameters

| Name      | Type                                           | Description                                                                                                                                                                                                     | Default    |
|-----------|------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `arr`     | numpy.numpy.ArrayLike                          | A numpy ndarray                                                                                                                                                                                                 | _required_ |
| `columns` | typing.Optional\[typing.List\[int\]\]          | If columns is None all columns will be randomly permuted, otherwise provide a list of columns to permute. Defaults to None.                                                                                     | `None`     |
| `seed`    | Optional\[Union\[int, np.random.Generator\]\]) | If `seed`is an integer or None, a new numpy.random.Generator is created using np.random.default_rng(seed).  If `seed` is already a ``Generator` instance, then the provided instance is used. Defaults to None. | `None`     |

Returns:
    numpy ndarray with columns of choice randomly permuted 

Examples:
```{python}
import pyLHD
x = pyLHD.LatinHypercube(size = (5,3), seed = 1)
x
```
Permute all columns
```{python}
pyLHD.permute_columns(x)
```
Permute columns [0,1] with `seed=1`
```{python}
pyLHD.permute_columns(x, columns = [0,1], seed = 1)
```