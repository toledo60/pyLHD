# orthogonal.OLHD_Butler01 { #pyLHD.orthogonal.OLHD_Butler01 }

`orthogonal.OLHD_Butler01(size, seed=None)`

Orthogonal Latin Hypercube Design (OLHD). Based on the construction method of Butler (2001)

## Parameters

| Name   | Type                                           | Description                                                                                                                                                                                                     | Default    |
|--------|------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `size` | tuple of ints                                  | Output shape of (n,d), where `n` and `d` are the number of rows and columns, respectively.                                                                                                                      | _required_ |
| `seed` | Optional\[Union\[int, np.random.Generator\]\]) | If `seed`is an integer or None, a new numpy.random.Generator is created using np.random.default_rng(seed).  If `seed` is already a ``Generator` instance, then the provided instance is used. Defaults to None. | `None`     |

## Raises

| Type       | Description                              |
|------------|------------------------------------------|
| ValueError | If `d` is not less than or equal to `n`  |
| ValueError | If `n` is not greater than or equal to 3 |
| ValueError | If `n` is not an odd prime number        |

## Returns

| Type                  | Description              |
|-----------------------|--------------------------|
| numpy.numpy.ArrayLike | A (n x d) orthogonal LHD |

Examples:
Create an orthogonal LHD with 11 rows and 5 columns
```{python}
import pyLHD
pyLHD.OLHD_Butler01(size = (11,5))
```
Create an orthogonal LHD with 7 rows and 6 columns
```{python}
 pyLHD.OLHD_Butler01(size = (7,6))
```