# base.LatinHypercube { #pyLHD.base.LatinHypercube }

`base.LatinHypercube(size, scramble=True, seed=None)`

Generate a random Latin Hypercube Design

## Parameters

| Name       | Type                                                | Description                                                                                                                                                                                                     | Default    |
|------------|-----------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `size`     | tuple of ints                                       | Output shape of (n,d), where `n` and `d` are the number of rows and columns, respectively.                                                                                                                      | _required_ |
| `scramble` | Optional\[bool\]                                    | When False, center samples within cells of a multi-dimensional grid.  Otherwise, samples are randomly placed within cells of the grid. Defaults to True.                                                        | `True`     |
| `seed`     | Optional\[Union\[Integral, np.random.Generator\]\]) | If `seed`is an integer or None, a new numpy.random.Generator is created using np.random.default_rng(seed).  If `seed` is already a ``Generator` instance, then the provided instance is used. Defaults to None. | `None`     |

## Returns

| Type          | Description                                                                                                                                                                              |
|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| npt.ArrayLike | A Latin hypercube sample of $n$ points generated in $[0,1)^d$  Each univariate marginal distribution is stratisfied, placing exactly one point in  $[j/n,(j+1)/n)$ for $j=0,1,\dots,n-1$ |

## Examples



```{python}
import pyLHD
pyLHD.LatinHypercube(size = (5,3),seed = 1)
```
```{python}
pyLHD.LatinHypercube(size = (5,3), seed = 1, scramble = False)
```